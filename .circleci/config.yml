version: 2
jobs:
    build:
        machine: true

        working_directory: /home/circleci/warehouse

        steps:
            - run:
                name: Install docker
                command: |
                    set -x
                    sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
                    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                    sudo apt update
                    sudo apt install docker-ce

            # This should go into custom primary image, here's only for the sake of explanation
            - run:
                name: Install Docker Compose
                command: |
                    set -x
                    curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` | sudo tee /usr/local/bin/docker-compose > /dev/null
                    sudo chmod +x /usr/local/bin/docker-compose

            - checkout
            - run:
                name: Create Docker image
                command: |
                    ./scripts/build/image $(grep version package.json | head -1 | tr -s ' ' | awk '{ print $2 }' | sed 's/[",]//g')
                    docker run --name mongo-local -d mongo
            - run:
                name: Try running the tests
                command: |
                    docker run -d --link mongo-local --name=warehouse -p 3000:3000 -e "MONGOLAB_URI=mongodb://mongo-local:27017/test" -e "NODE_ENV=staging" shoppinpal/warehouse:$(grep version package.json | head -1 | tr -s ' ' | awk '{ print $2 }' | sed 's/[",]//g')
            - run:
                name: Deploy warehouse
                command: |
                    if [ "${CIRCLE_BRANCH}" == "develop" ]; then
                      ./scripts/deploy.sh $(grep version package.json | head -1 | tr -s ' ' | awk '{ print $2 }' | sed 's/[",]//g')
                    elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                      ./scripts/deploy.sh $(grep version package.json | head -1 | tr -s ' ' | awk '{ print $2 }' | sed 's/[",]//g')
                    elif [[ "${CIRCLE_BRANCH}" =~ ^release.* ]]; then
                      ./scripts/deploy.sh $(grep version package.json | head -1 | tr -s ' ' | awk '{ print $2 }' | sed 's/[",]//g')
                    fi

#     deploy:
#
#       working_directory: /home/circleci/warehouse
#
#       docker:
#         - image: docker:17.06.1-ce
#
#       steps:
#         - checkout
#         - setup_remote_docker:
#           version: 17.06.1-ce
#         - run:
#             name: Install dependencies
#             command: apk add --no-cache bash
#         - run:
#             name: Build Push Docker Image
#             command: |
#               cd /home/circleci/warehouse
#               ./scripts/deploy.sh $(grep version package.json | head -1 | tr -s ' ' | awk '{ print $2 }' | sed 's/[",]//g')
#
# workflows:
#
#   version: 2
#
#   build-and-deploy:
#     jobs:
#       - build
#       - deploy:
#           context: org-global
#           requires:
#             - build
#           filters:
#             branches:
#               only:
#                 - master
#                 - develop
#                 - /^release.*/
