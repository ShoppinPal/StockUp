version: "3.2"
services:
  admin:
    image: node:10.15.3
    working_dir: /apps/warehouse/admin
    command: npm run start
    ports:
      - "4200:4200"
    volumes:
      - type: bind
        source: .
        target: /apps/warehouse

  lb:
    image: nginx:stable
    ports:
      - "80:80"
    volumes:
      - type: bind
        source: ./nginx.warehouse.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./wait-for
        target: /wait/wait-for
    depends_on:
      - web

  web:
    image: shoppinpal/node:6.10
    working_dir: /apps/warehouse
    entrypoint: ./dev-entrypoint.sh
    ports:
      - "3000"
    environment:
      NODE_ENV: local
    env_file: .env
    command: ./node_modules/nodemon/bin/nodemon.js server/server.js
    volumes:
      - type: bind
        source: .
        target: /apps/warehouse
    depends_on:
      - db

  worker:
    image: shoppinpal/node:6.10
    working_dir: /apps/workers
    command: node sqsWorker.js
    volumes:
      - type: bind
        source: ./workers
        target: /apps/workers
    restart: always
    env_file: worker.env
    depends_on:
      - memcache

  worker2:
    image: shoppinpal/node:6.10
    working_dir: /apps/workers
    command: node sqsWorker.js
    volumes:
      - type: bind
        source: ./workers
        target: /apps/workers
    restart: always
    env_file: worker2.env
    depends_on:
      - memcache

  monitoring:
    image: shoppinpal/node:6.10
    working_dir: /apps/workers
    command: node syncMonitoringWorker.js
    volumes:
      - type: bind
        source: ./workers
        target: /apps/workers
    restart: always
    env_file: monitoring-worker.env

  sync-engine:
    image: shoppinpal/node:6.10
    working_dir: /apps/workers
    command: node syncWorker.js
    volumes:
      - type: bind
        source: ./workers
        target: /apps/workers
    restart: always
    env_file: syncWorker.env

  db:
    image: mongo:3.2
    ports:
      - "27020:27017"
    volumes:
      - type: bind
        source: ./docker/volumes/mongo
        target: /data/db
  memcache:
    image: memcached:latest

  mssql:
    image: microsoft/mssql-server-linux
    volumes:
      - type: bind
        source: ./docker/volumes/mssql
        target: /var/opt/mssql
    env_file: mssql.env
    ports:
     - "1433:1433"

  notification:
    image: "node:8.16"
    volumes:
      - './notification-service:/notification-service'
    working_dir: /notification-service
    command: node index.js
#    command: ./node_modules/nodemon/bin/nodemon.js index.js
    env_file:
      - ./notification-service/notification.env
    ports:
      - "3001:3001"
    depends_on:
      - redis

  redis:
    image: "bitnami/redis:4.0"
    environment:
      - REDIS_PASSWORD=password
      - REDIS_EXTRA_FLAGS=--maxmemory 100mb
    ports:
      - 6379:6379


